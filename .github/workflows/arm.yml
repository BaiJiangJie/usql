name: ARM Build
on: push
env:
  GO_VERSION: stable
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [armv6l, armv7l, aarch64]
        include:
        - arch: armv6l
          cpu: arm1176
          base_image: raspios_lite:latest
        - arch: armv7l
          cpu: cortex-a7
          base_image: raspios_lite:latest
        - arch: aarch64
          cpu: cortex-a53
          base_image: raspios_lite_arm64:latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: ARM Runner
      uses: pguyot/arm-runner-action@v2
      with:
        base_image: ${{ matrix.base_image }}
        cpu: ${{ matrix.cpu }}
        commands: |
          uname -a
          test `uname -m` = ${{ matrix.arch }}
          grep Model /proc/cpuinfo
#    - name: Install build dependencies
#      run: |
#        sudo apt-get -qq update
#        sudo apt-get install -y --no-install-recommends \
#          build-essential \
#          libicu-dev \
#          unixodbc \
#          unixodbc-dev \
#          upx
#    - name: Setup Go
#      uses: actions/setup-go@v4
#      with:
#        go-version: ${{ env.GO_VERSION }}
#    - name: Build amd64
#      env:
#        CGO_ENABLED: 1
#        GOOS: linux
#        GOARCH: amd64
#      run: ./build-release.sh -r
#    - name: Build amd64 (static)
#      env:
#        CGO_ENABLED: 1
#        GOOS: linux
#        GOARCH: amd64
#      run: ./build-release.sh -r -s
#    - name: Archive artifacts
#      uses: actions/upload-artifact@v3
#      with:
#        name: dist-linux
#        path: build/linux/*/*/usql*.tar.bz2
